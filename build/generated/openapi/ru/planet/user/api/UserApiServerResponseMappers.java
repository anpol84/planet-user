/**
 * NOTE: This class is auto generated by Kora OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.planet.user.api;

import ru.tinkoff.kora.http.server.common.handler.HttpServerResponseEntityMapper;
import ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper;
import ru.tinkoff.kora.http.server.common.HttpServerResponse;
import ru.tinkoff.kora.http.server.common.HttpServerRequest;
import ru.tinkoff.kora.http.common.HttpResponseEntity;
import ru.tinkoff.kora.http.common.body.HttpBody;
import ru.tinkoff.kora.http.common.header.HttpHeaders;
import ru.tinkoff.kora.common.Context;


import ru.planet.user.api.UserApiResponses.*;

import ru.planet.user.model.ChangeUserRequest;
import ru.planet.user.model.CreateUser400Response;
import ru.planet.user.model.CreateUserRequest;
import ru.planet.user.model.CreateUserResponse;
import ru.planet.user.model.GetUser400Response;
import ru.planet.user.model.GetUserResponse;
import ru.planet.user.model.UserErrorResponse;

@ru.tinkoff.kora.common.annotation.Generated("openapi generator kora server")
public interface UserApiServerResponseMappers {
  @ru.tinkoff.kora.common.annotation.Generated("openapi generator kora server")
  final class ChangeUserApiResponseMapper implements HttpServerResponseMapper<ChangeUserApiResponse>{
    private final HttpServerResponseMapper<HttpResponseEntity<GetUser400Response>> response400Delegate;
    private final HttpServerResponseMapper<HttpResponseEntity<UserErrorResponse>> response422Delegate;


    public ChangeUserApiResponseMapper(
            @ru.tinkoff.kora.json.common.annotation.Json
      HttpServerResponseMapper<GetUser400Response> response400Delegate,
            @ru.tinkoff.kora.json.common.annotation.Json
      HttpServerResponseMapper<UserErrorResponse> response422Delegate
      ) {
      this.response400Delegate = new HttpServerResponseEntityMapper<>(response400Delegate);
      this.response422Delegate = new HttpServerResponseEntityMapper<>(response422Delegate);
    }

    @Override
    public HttpServerResponse apply(Context ctx, HttpServerRequest request, ChangeUserApiResponse response) throws java.io.IOException { 
      if (response instanceof ChangeUserApiResponse.ChangeUser200ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        return HttpServerResponse.of(200, headers);
      }
      if (response instanceof ChangeUserApiResponse.ChangeUser400ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        var entity = HttpResponseEntity.of(400, headers, rs.content());
        return this.response400Delegate.apply(ctx, request, entity);
      }
      if (response instanceof ChangeUserApiResponse.ChangeUser422ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        var entity = HttpResponseEntity.of(422, headers, rs.content());
        return this.response422Delegate.apply(ctx, request, entity);
      }
      throw new IllegalStateException();
    }
  }

  @ru.tinkoff.kora.common.annotation.Generated("openapi generator kora server")
  final class CreateUserApiResponseMapper implements HttpServerResponseMapper<CreateUserApiResponse>{
    private final HttpServerResponseMapper<HttpResponseEntity<CreateUserResponse>> response200Delegate;
    private final HttpServerResponseMapper<HttpResponseEntity<CreateUser400Response>> response400Delegate;
    private final HttpServerResponseMapper<HttpResponseEntity<UserErrorResponse>> response422Delegate;


    public CreateUserApiResponseMapper(
      @ru.tinkoff.kora.json.common.annotation.Json
      HttpServerResponseMapper<CreateUserResponse> response200Delegate,
            @ru.tinkoff.kora.json.common.annotation.Json
      HttpServerResponseMapper<CreateUser400Response> response400Delegate,
            @ru.tinkoff.kora.json.common.annotation.Json
      HttpServerResponseMapper<UserErrorResponse> response422Delegate
      ) {
      this.response200Delegate = new HttpServerResponseEntityMapper<>(response200Delegate);
      this.response400Delegate = new HttpServerResponseEntityMapper<>(response400Delegate);
      this.response422Delegate = new HttpServerResponseEntityMapper<>(response422Delegate);
    }

    @Override
    public HttpServerResponse apply(Context ctx, HttpServerRequest request, CreateUserApiResponse response) throws java.io.IOException { 
      if (response instanceof CreateUserApiResponse.CreateUser200ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        var entity = HttpResponseEntity.of(200, headers, rs.content());
        return this.response200Delegate.apply(ctx, request, entity);
      }
      if (response instanceof CreateUserApiResponse.CreateUser400ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        var entity = HttpResponseEntity.of(400, headers, rs.content());
        return this.response400Delegate.apply(ctx, request, entity);
      }
      if (response instanceof CreateUserApiResponse.CreateUser422ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        var entity = HttpResponseEntity.of(422, headers, rs.content());
        return this.response422Delegate.apply(ctx, request, entity);
      }
      throw new IllegalStateException();
    }
  }

  @ru.tinkoff.kora.common.annotation.Generated("openapi generator kora server")
  final class DeleteUserApiResponseMapper implements HttpServerResponseMapper<DeleteUserApiResponse>{
    private final HttpServerResponseMapper<HttpResponseEntity<GetUser400Response>> response400Delegate;
    private final HttpServerResponseMapper<HttpResponseEntity<UserErrorResponse>> response422Delegate;


    public DeleteUserApiResponseMapper(
            @ru.tinkoff.kora.json.common.annotation.Json
      HttpServerResponseMapper<GetUser400Response> response400Delegate,
            @ru.tinkoff.kora.json.common.annotation.Json
      HttpServerResponseMapper<UserErrorResponse> response422Delegate
      ) {
      this.response400Delegate = new HttpServerResponseEntityMapper<>(response400Delegate);
      this.response422Delegate = new HttpServerResponseEntityMapper<>(response422Delegate);
    }

    @Override
    public HttpServerResponse apply(Context ctx, HttpServerRequest request, DeleteUserApiResponse response) throws java.io.IOException { 
      if (response instanceof DeleteUserApiResponse.DeleteUser200ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        return HttpServerResponse.of(200, headers);
      }
      if (response instanceof DeleteUserApiResponse.DeleteUser400ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        var entity = HttpResponseEntity.of(400, headers, rs.content());
        return this.response400Delegate.apply(ctx, request, entity);
      }
      if (response instanceof DeleteUserApiResponse.DeleteUser422ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        var entity = HttpResponseEntity.of(422, headers, rs.content());
        return this.response422Delegate.apply(ctx, request, entity);
      }
      throw new IllegalStateException();
    }
  }

  @ru.tinkoff.kora.common.annotation.Generated("openapi generator kora server")
  final class GetUserApiResponseMapper implements HttpServerResponseMapper<GetUserApiResponse>{
    private final HttpServerResponseMapper<HttpResponseEntity<GetUserResponse>> response200Delegate;
    private final HttpServerResponseMapper<HttpResponseEntity<GetUser400Response>> response400Delegate;
    private final HttpServerResponseMapper<HttpResponseEntity<UserErrorResponse>> response422Delegate;


    public GetUserApiResponseMapper(
      @ru.tinkoff.kora.json.common.annotation.Json
      HttpServerResponseMapper<GetUserResponse> response200Delegate,
            @ru.tinkoff.kora.json.common.annotation.Json
      HttpServerResponseMapper<GetUser400Response> response400Delegate,
            @ru.tinkoff.kora.json.common.annotation.Json
      HttpServerResponseMapper<UserErrorResponse> response422Delegate
      ) {
      this.response200Delegate = new HttpServerResponseEntityMapper<>(response200Delegate);
      this.response400Delegate = new HttpServerResponseEntityMapper<>(response400Delegate);
      this.response422Delegate = new HttpServerResponseEntityMapper<>(response422Delegate);
    }

    @Override
    public HttpServerResponse apply(Context ctx, HttpServerRequest request, GetUserApiResponse response) throws java.io.IOException { 
      if (response instanceof GetUserApiResponse.GetUser200ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        var entity = HttpResponseEntity.of(200, headers, rs.content());
        return this.response200Delegate.apply(ctx, request, entity);
      }
      if (response instanceof GetUserApiResponse.GetUser400ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        var entity = HttpResponseEntity.of(400, headers, rs.content());
        return this.response400Delegate.apply(ctx, request, entity);
      }
      if (response instanceof GetUserApiResponse.GetUser422ApiResponse rs) { 
        var headers = HttpHeaders.of();
        
        
        
        var entity = HttpResponseEntity.of(422, headers, rs.content());
        return this.response422Delegate.apply(ctx, request, entity);
      }
      throw new IllegalStateException();
    }
  }

}
