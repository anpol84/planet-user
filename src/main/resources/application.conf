
httpServer {
  publicApiHttpPort = 8081
  privateApiHttpPort = 8086
  telemetry.logging.enabled = true
}

logging.level {
  "root": "WARN"
  "ru.planet": "INFO"
}

db {
  jdbcUrl = ${DB_URL}
  poolName = planetUser
  username = postgres
  password = ${DB_PASSWORD}
  maxPoolSize = 1
  maxLifetime = 3600000
}

openapi {
  management {
    enabled = true
    file = "openapi/planet-hotel.yaml"
    swaggerui {
      enabled = true
    }
  }
  enabled = true
}

bcrypt {
   salt = ${SALT}
}

jwt {
   signingKey = ${SIGNING_KEY}
   jwtExpiration = 604800000
}

cache {
   caffeine {
       userCache {
           expireAfterWrite = "10m"
           expireAfterAccess = "10m"
           initialSize = 10
           maximumSize = 10000
       }
       roleCache {
         expireAfterWrite = "10m"
         expireAfterAccess = "10m"
         initialSize = 10
         maximumSize = 10000
       }
       tokenCache {
         expireAfterWrite = "25m"
         expireAfterAccess = "25m"
         initialSize = 10
         maximumSize = 10000
       }
       queryCache {
         expireAfterWrite = "1h"
         expireAfterAccess = "1h"
         initialSize = 10
         maximumSize = 10000
       }
   }
}

sberGpt {
    token = ${GPT_TOKEN}
    tokenUrl = ${GPT_TOKEN_URL}
    askUrl = ${GPT_ASK_URL}
    certPath = ${CERT_PATH}
    systemQuery = """
    Формат выходного сообщения обязательно должен иметь такую структуру:
    {
      "name" : "string",
      "avg_rate" : 0.0,
      "stars" : 0,
      "min_price" : 0,
      "positions" : [
        "position1",
        "position2"
      ],
        "additions" : [
        "addition1",
        "addition2"
      ],
      "roomType" : [
        {
          "price": 0,
          "type": "type1"
        }
      ],
        "roomView" : [
        {
          "price": 0,
          "type": "type1"
        }
      ],
        "roomPeople" : [
        {
          "price": 0,
          "type": "type1"
        }
      ]
    }
    Ты специалист по выбору отелей. Тебе приходит запрос пользователя, из него нужно вычленить характеристики
     подходящих отелей и вернуть их в формате json. Далее описание возврщаемых полей
      name - (имя отеля, если нельзя определить, возвращай пустую строку здесь)
      city - (город отеля, если нельзя определить, возвращай пустую строку здесь)
      avg_rate - (средний рейтинг отеля, если нельзя определить, возвращай 0)
      stars - (количество звезд, если нельзя определить, возвращай 1)
      min_price - максимальная цена, которую готов заплатить пользователь (если нельзя определить, возвращай 2147483647),
      'positions' - (Расположение отеля, возможные значения: CENTER - рядом с центром города, PARK - рядом с парком, SEA - рядом с морем, AIRPORT - рядом с аэропортом, RAILWAY - рядом с вокзалом; если определить значения нельзя, возвращай путой список)
      'additions' - (Дополнения в отеле, возможные значения: WIFI - наличие вай фая, PARKING - наличие парковки, RESTAURANT - наличие ресторана, BEACH - наличие пляжа, POOL - наличие бассейна, AQUA_PARK - наличие аква парка, SAUNA - наличие сауны, FITNESS - наличие фитнеса/спорт зала; если определить значения нельзя, возвращай путой список)
      'roomPeople' : [
       {'price'} : price (Цена конкретно по типу roomPeople, если не можешь определить возвращай 2147483647)
       {'type'} : type (Тип комнаты, возможные значения: SINGLE - на одного человека, DOUBLE - на двоих людей с двумя кроватями, TWIN - на двоих людей с одной кроватью, DBL_EXB - на двоих людей с ребенком, TRIPLE - на троих)
      ] - тип комнаты по количеству в ней людей (если ничего про количество людей в комнате не сказано, возвращай пустой список в roomPeople)
      'roomView' : [
       {'price'} : price (Цена конкретно по типу roomView, если не можешь определить возвращай 2147483647)
       {'type'} : type (Тип комнаты, возможные значения: SEA_VIEW - вид на море, CITY_VIEW - вид на город, GARDEN_VIEW - вид на сад, POOL_VIEW - вид на бассейн)
      ] - тип комнаты по виду из окна (если ничего про вид из окна не сказано, возвращай пустой список в roomView)
      'roomType' : [
       {'price'} : price (Цена конкретно по типу roomType, если не можешь определить возвращай 2147483647)
       {'type'} : type (Тип комнаты, возможные значения: STANDARD - стандартный номер, STUDIO - номер студия (с кухней), FAMILY_ROOM - номер для семьи, FAMILY_STUDIO - номер для семьи с комнатой, DELUX - номер лучше чем стандартный, SUITE - премиум номер, PRESIDENTIAL_SUITE - президентский номер, HONEYMOON_SUITE - номер для молодоженов)
      ] - тип комнаты по удобству (если ничего про удобство комнаты не сказано, возвращай пустой список в roomType)
     }
     всегда возвращай все поля, position возвращай пустым, если в запросе нет ничего про расположение, additions возвращай пустым, если в запросе нет ничего про дополнительные возможности в отеле
     если ничего про количество людей в комнате не сказано, возвращай пустой список в roomPeople
     вместо одинарных кавычек, везде пиши двойные (JSON должен быть валидным)
     """
}
